InstrumentTester.java
Solution Code
public class InstrumentTester
{
    public static void main(String[] args)
    {
        /**
         * Don't Change This Tester Class!
         * 
         * When you are finished, this should run without error.
         */ 
        Wind tuba = new Wind("Tuba", "Brass", false);
        Wind clarinet = new Wind("Clarinet", "Woodwind", true);
        
        Strings violin = new Strings("Violin", true);
        Strings harp = new Strings("Harp", false);
        
        System.out.println(tuba);
        System.out.println(clarinet);
        
        System.out.println(violin);
        System.out.println(harp);
    }
}




Instrument.java
Solution Code
public class Instrument
{
    private String name;
    private String family;
    
    public Instrument(String name, String family){
        this.name = name;
        this.family = family;
    }
    
    public String getName(){
        return name;
    }
    
     public void setName(String name){
        this.name = name;
    }
    
    public String getFamily(){
        return family;
    }
    
     public void setFamily(String family){
        this.family = family;
    }
    
    public String toString(){
        return name + " is a member of the " + family + " family.";
    }
}






Wind.java
Solution Code
public class Wind extends Instrument
{
    private boolean reed;
    
    public Wind(String name, String family, boolean hasReed){
        
        super(name, family);
        reed = hasReed;
    }
    
    public boolean hasReed(){
        return reed;
    }
    
    public void setReed(boolean hasReed){
        reed = hasReed;
    }
    
}






Strings.java
Solution Code
public class Strings extends Instrument
{
    private boolean bow;
    
    public Strings (String name, boolean hasBow){
        
        super(name, "Strings");
        bow = hasBow;
    }
    
    public boolean hasBow(){
        return bow;
    }
    
    public void setBow(boolean hasBow){
        bow = hasBow;
    }
    
}
