StudentTester.java
Solution Code
import java.util.Scanner;

public class StudentTester {

    public static void main(String[] args) {

        Scanner input = new Scanner(System.in);

        System.out.println("Please enter the student's name: ");
        String name = input.nextLine();

        System.out.println("Please enter the Math Score: ");
        int mathScore = input.nextInt();

        System.out.println("Please enter the ELA Score: ");
        int elaScore = input.nextInt();

        System.out.println("Please enter the Service Hours: ");
        int serviceHours = input.nextInt();

        HSStudent student = new HSStudent(name, mathScore, elaScore, serviceHours);

        System.out.println("Pass Math? " + student.passMath());
        System.out.println("Pass ELA? " + student.passEla());
        System.out.println("Completed Service Hours? " + student.completeService());
        System.out.println(student);

    }

}







StudentTest.java
Solution Code
public class StudentTest {

    private int mathScore;
    private int elaScore;
    private String name;

    public StudentTest(String name, int mathScore, int elaScore){
        this.name = name;
        this.mathScore = mathScore;
        this.elaScore = elaScore;
    }

	public int getMathScore() {
		return mathScore;
	}

	public void setMathScore(int mathScore) {
		this.mathScore = mathScore;
	}

	public int getElaScore() {
		return elaScore;
	}

	public void setElaScore(int elaScore) {
		this.elaScore = elaScore;
	}

	public String getName() {
		return name;
	}

}





HSStudent.java
Solution Code
public class HSStudent extends StudentTest {

    private int serviceHours;

    public HSStudent(String name, int mathScore, int elaScore, int serviceHours){
        super(name, mathScore, elaScore);
        this.serviceHours = serviceHours;
    }

    public int getServiceHours(){
        return serviceHours;
    }

    public void setServiceHours(int serviceHours){
        this.serviceHours = serviceHours;
    }

    public boolean passMath(){
        return super.getMathScore() >= 525;
    }

    public boolean passEla(){
        return super.getElaScore() >= 560;
    }

    public boolean completeService(){
        return serviceHours >= 75;
    }

    public boolean gradQualify(){
        return passMath() && passEla() && completeService();
    }

    @Override
    public String toString(){
        if (gradQualify()){
            return super.getName() + " has qualified for graduation.";
        }

        return super.getName() + " has not yet qualified for graduation.";
    }
}
